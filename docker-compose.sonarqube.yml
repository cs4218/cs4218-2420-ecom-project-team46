# References:
# https://medium.com/@denis.verkhovsky/sonarqube-with-docker-compose-complete-tutorial-2aaa8d0771d4
# https://medium.com/@index23/start-sonarqube-server-and-run-analyses-locally-with-docker-4550eb7112a3

services:
  sonarqube:
    image: sonarqube:lts-community
    depends_on:
      - sonar_db
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports:
      - "9001:9000"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_temp:/opt/sonarqube/temp

  sonar_db:
    image: postgres:13
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db:/var/lib/postgresql
      - sonar_db_data:/var/lib/postgresql/data

  sonar-scanner:
    container_name: sonar-scanner
    image: sonarsource/sonar-scanner-cli
    volumes:
      - ./:/usr/src
    environment:
      SONAR_HOST_URL: "http://localhost:9001"
      SONAR_SCANNER_OPTS: "-Dsonar.projectKey=econ"
      SONAR_TOKEN: "sqa_526e49ce256789af27cca6c4d0d8938398a62ad0"
    network_mode: host
    platform: linux/amd64
    depends_on:
      - sonarqube
    entrypoint: >
      /bin/sh -c "until curl -s $$SONAR_HOST_URL/api/system/status | grep -q 'UP'; do echo 'Waiting for SonarQube...'; sleep 5; done;
      echo 'SonarQube is up! Running sonar-scanner';
      sonar-scanner"

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_temp:
  sonar_db:
  sonar_db_data:
